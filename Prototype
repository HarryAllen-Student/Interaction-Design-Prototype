from adafruit_circuitplayground import cp
import board # access board pins to connext external sensors/actuators
import busio # ultrasonic sensor requires Serial connection to send/receive the distance data
import adafruit_us100 #
import time

current_time = time.time() # always moving
start_time = current_time

uart = busio.UART(board.TX, board.RX, baudrate=9600) # obj_instance = busio.UART(TX, RX, speed)


us100 = adafruit_us100.US100(uart) # obj_instance = adafruit_us100.US100(connection)

cp.pixels.brightness = 0.1
run = True
replacevalues=True
averagevalues=[]
averagetot=0
previousaverage=0
pausedtime=0
runtime=True
while True:
    distance = us100.distance
    difference = int(current_time - start_time)

   # print("time difference: ", difference)
    while len(averagevalues)<=9:            #fill the list initially
        averagevalues.append(distance)
        distance = us100.distance
    for i in averagevalues:                 #add all the values together
        averagetot+=i
     #   print(averagetot)
   # print("averagetot",averagetot)
    average=averagetot/len(averagevalues)
    #print(averagevalues)
 #   print(average)
    while replacevalues==True:                 #move all the values forward and replace last value
        averagevalues[0]=averagevalues[1]
        averagevalues[1]=averagevalues[2]
        averagevalues[2]=averagevalues[3]
        averagevalues[3]=averagevalues[4]
        averagevalues[4]=averagevalues[5]
        averagevalues[5]=averagevalues[6]
        averagevalues[6]=averagevalues[7]
        averagevalues[7]=averagevalues[8]
        averagevalues[8]=averagevalues[9]
        averagevalues[9]=distance
        replacevalues=False
   # print("moved: ", averagevalues)
    if average-previousaverage>20:           #leave
       pausedtime=current_time
       current_time=pausedtime
       runtime=False
     #  print(average-previousaverage)
    #print(runtime)

    if previousaverage-average>=-20:
        current_time=time.time()
        runtime=True
        print("working")

    if runtime==False:
        current_time=pausedtime
        print("break")

  #  print("time at end of programme. Curr time: ", current_time, " paus time: ", pausedtime)
   # print(runtime)

    time.sleep(1)
    replacevalues=True
    averagetot=0
    previousaverage=average

